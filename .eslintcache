[{"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/index.tsx":"1","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/reportWebVitals.ts":"2","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/App.tsx":"3","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/routes/app.routes.js":"4","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/itemLogin/ItemLoginComponent.tsx":"5","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/policies/PoliciesComponent.tsx":"6","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/stepOf/StepOfComponent.tsx":"7","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/pages/StartPage.tsx":"8","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/pages/StepOnePage.tsx":"9","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/store/actions/consumerApiActions.tsx":"10","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/consumers/consumers.tsx":"11","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/store/reducer/store.tsx":"12","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/store/reducer/PersonDataReducer.tsx":"13","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/store/types/types.tsx":"14","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/pages/StepTwoPage.tsx":"15","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/cardPlan/CardPlan.tsx":"16","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/cardDetailPlan/CardDetailPlan.tsx":"17","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/itemBenefit/ItemBenefit.tsx":"18","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/listBelefits.js":"19","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/optionList.js":"20","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/typeDocs.js":"21","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/plans.js":"22","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/pages/EndPage.tsx":"23","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/detailPlans.js":"24"},{"size":500,"mtime":1612271601845,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1612271601846,"results":"27","hashOfConfig":"26"},{"size":320,"mtime":1612376299681,"results":"28","hashOfConfig":"26"},{"size":733,"mtime":1612416369710,"results":"29","hashOfConfig":"26"},{"size":492,"mtime":1612294527550,"results":"30","hashOfConfig":"26"},{"size":2555,"mtime":1612358819555,"results":"31","hashOfConfig":"26"},{"size":781,"mtime":1612452052974,"results":"32","hashOfConfig":"26"},{"size":12501,"mtime":1612452106122,"results":"33","hashOfConfig":"26"},{"size":14630,"mtime":1612452258456,"results":"34","hashOfConfig":"26"},{"size":627,"mtime":1612451498946,"results":"35","hashOfConfig":"26"},{"size":907,"mtime":1612371459215,"results":"36","hashOfConfig":"26"},{"size":593,"mtime":1612376793859,"results":"37","hashOfConfig":"26"},{"size":1037,"mtime":1612451498938,"results":"38","hashOfConfig":"26"},{"size":114,"mtime":1612379501949,"results":"39","hashOfConfig":"26"},{"size":5170,"mtime":1612452258451,"results":"40","hashOfConfig":"26"},{"size":1124,"mtime":1612451911577,"results":"41","hashOfConfig":"26"},{"size":2280,"mtime":1612451960298,"results":"42","hashOfConfig":"26"},{"size":817,"mtime":1612404149111,"results":"43","hashOfConfig":"26"},{"size":636,"mtime":1612404146911,"results":"44","hashOfConfig":"26"},{"size":669,"mtime":1612404343007,"results":"45","hashOfConfig":"26"},{"size":155,"mtime":1612404463390,"results":"46","hashOfConfig":"26"},{"size":426,"mtime":1612404589804,"results":"47","hashOfConfig":"26"},{"size":2437,"mtime":1612452258448,"results":"48","hashOfConfig":"26"},{"size":603,"mtime":1612451945766,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1x24u9i",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/index.tsx",[],["104","105"],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/reportWebVitals.ts",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/App.tsx",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/routes/app.routes.js",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/itemLogin/ItemLoginComponent.tsx",["106"],"import React from 'react';\nimport {Grid} from '@material-ui/core';\n\nfunction ItemLogin(props: {icon: string, description: string}) {\n\n    return (\n\n        <Grid container>\n\n            <Grid item xs={1}>\n                <img src={props.icon} className={'login__details-icon'}/>\n            </Grid>\n\n            <Grid item xs={11}>\n                <div className={'login__details-description'}>{props.description}</div>\n            </Grid>\n\n        </Grid>\n\n  );\n}\n\nexport default ItemLogin;\n","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/policies/PoliciesComponent.tsx",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/stepOf/StepOfComponent.tsx",["107"],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/pages/StartPage.tsx",["108","109","110"],"import React, {Fragment, useEffect, useState} from 'react';\nimport {Grid} from '@material-ui/core';\nimport {useDispatch, useSelector, shallowEqual} from \"react-redux\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport imgCenter from '../assets/images/Illustration-1.png';\nimport ItemLogin from \"../components/itemLogin/ItemLoginComponent\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Policies from \"../components/policies/PoliciesComponent\";\n\n// @ts-ignore\nimport {useHistory} from \"react-router-dom\";\n\nimport {getDataByApi} from '../store/actions/consumerApiActions'\n\n\nimport optionList from '../assets/data/optionList'\nimport typeDocs from '../assets/data/typeDocs'\n\nfunction StartPage() {\n\n    const history = useHistory();\n    const dispatch = useDispatch()\n\n    const [typeDoc, setTypeDoc] = useState('1');\n    const [typeDocSize, setTypeDocSize] = useState(8);\n\n    const [phoneSize] = useState(9);\n\n    const [fromValues, setFromValues] = useState({\n        document: \"\", bornDate: \"\", phone: \"\"\n    })\n\n    const {document, bornDate, phone} = fromValues;\n\n    const [validateCel, setValidateCel] = useState(false)\n    const [validateCelMessage, setValidateCelMessage] = useState('hidden')\n\n    const [validateDoc, setValidateDoc] = useState(false)\n    const [validateDocMessage, setValidateDocMessage] = useState('hidden')\n\n    const [validateApi, setValidateApi] = useState(false)\n    const [validateApiMessage, setValidateApiMessage] = useState('hidden')\n\n    const [validateDate, setValidateDate] = useState(false)\n    const [validateDateMessage, setValidateDateMessage] = useState('hidden')\n\n    const [progressState, setProgressState] = useState('hidden')\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTypeDoc(event.target.value);\n        switch (event.target.value) {\n            case '1': {\n                setTypeDocSize(8);\n                break;\n            }\n            case '2': {\n                setTypeDocSize(5);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    const [policyValidation, setPolicyValidation] = useState<string>('hidden');\n\n    const [policyState, setPolicyState] = React.useState({\n        checkedPolicyOne: false,\n        checkedPolicyTwo: false\n    });\n\n    const handleChangeCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPolicyState({...policyState, [event.target.name]: event.target.checked});\n    };\n\n    const handleInputChange = (event: { target: { name: any; value: any; }; }) => {\n\n        const re = /[^0-9]/g;\n\n        if (event.target.name === 'document' || event.target.name === 'phone') {\n            setFromValues({\n                ...fromValues,\n                [event.target.name]: event.target.value.replace(re, '')\n            })\n        } else {\n            setFromValues({\n                ...fromValues,\n                [event.target.name]: event.target.value\n            })\n        }\n\n    }\n\n    const validateData = () => {\n\n        (!policyState.checkedPolicyOne || !policyState.checkedPolicyTwo) ?\n            setPolicyValidation('show') : setPolicyValidation('hidden');\n\n        (!phone || phone.length < 9) ? setValidateCel(true) : setValidateCel(false);\n        (!phone || phone.length < 9) ? setValidateCelMessage('show') : setValidateCelMessage('hidden');\n\n        (!document || document.length !== typeDocSize) ? setValidateDoc(true) : setValidateDoc(false);\n        (!document || document.length !== typeDocSize) ? setValidateDocMessage('show') : setValidateDocMessage('hidden');\n\n        (!bornDate) ? setValidateDate(true) : setValidateDate(false);\n        (!bornDate) ? setValidateDateMessage('show') : setValidateDateMessage('hidden');\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        (!validateApi && !validateDoc && !validateCel && !validateDate && policyState.checkedPolicyOne && policyState.checkedPolicyTwo)\n            ? history.push(\"/stepone\") : '';\n\n    };\n\n    // @ts-ignore\n    const {person} = useSelector(store => store, shallowEqual)\n\n    useEffect(() => {\n        if (fromValues.document.length === typeDocSize) {\n            setProgressState('show')\n            dispatch(getDataByApi(fromValues.document));\n        } else setProgressState('hidden')\n    }, [fromValues.document])\n\n    useEffect(() => {\n        if (person.error) {\n            setValidateApi(true)\n            setValidateApiMessage('show')\n            setProgressState('hidden')\n        } else {\n            setValidateApi(false)\n            setValidateApiMessage('hidden')\n            setProgressState('hidden')\n        }\n        if (fromValues.phone) setProgressState('hidden')\n    }, [person.error, fromValues.phone])\n\n    useEffect(() => {\n        setValidateApi(false)\n        setValidateApiMessage('hidden')\n    }, [fromValues.document])\n\n    useEffect(() => {\n        setFromValues({\n            ...fromValues,\n            document: fromValues.document ? fromValues.document : person.document,\n            bornDate: person.bornDate,\n            phone: person.phone\n        })\n    }, [person])\n\n    return (\n        <Fragment>\n\n            <img src={imgCenter} className={'login__image-center'}/>\n            <Grid container>\n                <Grid item sm={6}>\n\n                    <div className={'leftSection'}>\n\n                        <div className={'leftSection__info'}>\n\n                            <div className={'login__title'}>\n                                Seguro de\n                                <div className={'login__title-health'}>Salud</div>\n                            </div>\n\n                            <div className={'login__details'}>\n                                {\n                                    optionList.map((item, i) => (\n                                            <ItemLogin key={i} icon={item.icon} description={item.description}/>\n                                        )\n                                    )\n                                }\n                            </div>\n                        </div>\n\n                        <div className={'leftSection__copyright'}>\n                            &copy; RIMAC Seguros y Reaseguros.\n                        </div>\n\n                    </div>\n                </Grid>\n\n                <Grid item sm={6}>\n\n                    <div className={'rightSection'}>\n\n                        <div className={'rightSection__text-title'}>\n                            Obtén tu <span className={'rightSection__text-bold'}>seguro ahora</span>\n                        </div>\n                        <div className={'rightSection__text-subtitle'}>\n                            Ingresa los datos para comenzar.\n                        </div>\n\n                        <Grid container>\n                            <Grid item sm={3}>\n                                <TextField\n                                    id=\"standard-select-currency\"\n                                    select\n                                    value={typeDoc}\n                                    onChange={handleChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                >\n                                    {typeDocs.map((option, i) => (\n                                        <MenuItem key={i} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n\n                            <Grid item sm={7}>\n                                <TextField\n                                    id=\"document\"\n                                    name=\"document\"\n                                    value={document}\n                                    label=\"Nro. de Documento\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    onChange={handleInputChange}\n                                    error={validateDoc}\n                                    inputProps={{maxLength: typeDocSize, min: \"1950-01-01\", max: \"2021-01-01\"}}\n                                />\n                                <div\n                                    className={`rightSection__messageValidation rightSection__message-${validateDocMessage}`}>\n                                    Ingrese documento válido ({typeDocSize} dígitos).\n                                </div>\n                                <div\n                                    className={`rightSection__messageValidation rightSection__message-${validateApiMessage}`}>\n                                    Error al buscar documento ingresado.\n                                </div>\n                            </Grid>\n\n                            <Grid item sm={2}>\n                                <div className={`rightSection__loader rightSection__message-${progressState}`}>\n                                    <CircularProgress/>\n                                </div>\n                            </Grid>\n\n                            <Grid item sm={10}>\n                                <div className={'rightSection__personalInput'}>\n                                    <TextField\n                                        id=\"bornDate\"\n                                        name=\"bornDate\"\n                                        value={bornDate}\n                                        label=\"Fecha de nacimineto\"\n                                        type=\"date\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        error={validateDate}\n                                        onChange={handleInputChange}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </div>\n                                <div\n                                    className={`rightSection__messageValidation rightSection__message-${validateDateMessage}`}>\n                                    Ingrese una fecha válida.\n                                </div>\n                            </Grid>\n\n                            <Grid item sm={10}>\n                                <div className={'rightSection__personalInput'}>\n                                    <TextField\n                                        id=\"phone\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        label=\"Celular\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        error={validateCel}\n                                        onChange={handleInputChange}\n                                        inputProps={{maxLength: phoneSize}}\n                                    />\n                                </div>\n                                <div\n                                    className={`rightSection__messageValidation rightSection__message-${validateCelMessage}`}>\n                                    Ingrese celular válido ({phoneSize} dígitos).\n                                </div>\n                            </Grid>\n\n                            <Grid item sm={9}>\n                                <Policies policyState={policyState} handleChangeCheck={handleChangeCheck}\n                                          policyValidation={policyValidation}/>\n                            </Grid>\n\n                            <Grid item sm={12}>\n                                <div className={'rightSection__personalInput'}>\n                                    <button className={`rightSection__personalButton pointer`} onClick={validateData}>\n                                        COMENCEMOS\n                                    </button>\n                                </div>\n                            </Grid>\n\n                        </Grid>\n                    </div>\n\n                </Grid>\n            </Grid>\n\n        </Fragment>\n    );\n}\n\nexport default StartPage;\n","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/pages/StepOnePage.tsx",["111","112","113","114"],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/store/actions/consumerApiActions.tsx",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/consumers/consumers.tsx",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/store/reducer/store.tsx",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/store/reducer/PersonDataReducer.tsx",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/store/types/types.tsx",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/pages/StepTwoPage.tsx",["115","116","117","118","119"],"import React, {Fragment, useEffect, useState} from 'react';\nimport {Grid} from '@material-ui/core';\n\nimport imgCenter from '../assets/images/Illustration-1.png';\n\n// @ts-ignore\nimport {useHistory} from \"react-router-dom\";\nimport StepOf from \"../components/stepOf/StepOfComponent\";\n\nimport {shallowEqual, useSelector} from \"react-redux\";\nimport CardPlan from \"../components/cardPlan/CardPlan\";\nimport CardDetailPlan from \"../components/cardDetailPlan/CardDetailPlan\";\n\nimport iconBack from '../assets/images/iconBack.svg';\n\nimport plans from \"../assets/data/plans\"\n\nimport './style.css';\n\nfunction StepTwoPage() {\n\n    const history = useHistory();\n\n    const [allPlans, setAllPlans] = useState(plans);\n\n    const [selectedPlan, setSelectedPlan] = useState(0);\n\n    // @ts-ignore\n    const {person} = useSelector(store => store, shallowEqual)\n\n    const goBack = () => {\n        history.push(\"/stepone\")\n    }\n\n    const selectPlan = (id: number) => {\n\n        let copyPlans = [...allPlans];\n\n        copyPlans.map((item, i) => {\n            (id === i) ? item.state = true : item.state = false;\n        })\n\n        setSelectedPlan(id)\n        setAllPlans(copyPlans)\n    }\n\n    const validateData = () => {\n        history.push(\"/end\")\n    }\n\n    useEffect(() => {\n\n        // eslint-disable-next-line\n        !person.document ? history.push(\"/start\") : '';\n\n        window.scrollTo(0, 0);\n\n    }, [person])\n\n    return (\n        <Fragment>\n\n            <img src={imgCenter} className={'steep__image-center'}/>\n            <Grid container>\n                <Grid item sm={4}>\n\n                    <div className={'stepLeftSection'}>\n                    </div>\n                </Grid>\n\n                <Grid item sm={7}>\n\n                    <div className={'stepRightSection'}>\n\n                        <StepOf step={2} of={7} redirect={goBack}/>\n\n                        <div className={'rightSection__text-title'}>\n                            Elige <span className={'rightSection__text-bold'}>tu protección</span>\n                        </div>\n                        <div className={'rightSection__text-smallsubtitle'}>\n                            Selecciona tu plan de salud ideal.\n                        </div>\n\n                        <Grid container>\n                            {\n                                allPlans.map((item, i) => (\n                                        <Grid item sm={3} key={i}>\n                                            <CardPlan key={i} planId={item.planId} name={item.name} cost={item.cost}\n                                                      state={item.state} selectPlan={selectPlan}/>\n                                        </Grid>\n                                    )\n                                )\n                            }\n\n                            <Grid item sm={12}>\n                                <CardDetailPlan selectedPlan={selectedPlan}/>\n                            </Grid>\n\n                        </Grid>\n\n\n                        <div className={'rightSection__textService cardDetailPlan__coverage'}>\n                            Revisa nuestros <div className={'rightSection__textService-bold'}>servicios y\n                            exclusiones</div>\n                        </div>\n\n                        <div className={'rightSection__textService-menu cardDetailPlan__coverage'}>\n                            <Grid container>\n                                <Grid item sm={11}>\n                                    Servicios brindados\n                                </Grid>\n                                <Grid item sm={1}>\n                                    <img src={iconBack} className={'rightSection__back-iconRotate pointer'}/>\n                                </Grid>\n                            </Grid>\n                        </div>\n\n                        <div className={'rightSection__textService-menu cardDetailPlan__coverage'}>\n                            <Grid container>\n                                <Grid item sm={11}>\n                                    Exclusiones\n                                </Grid>\n                                <Grid item sm={1}>\n                                    <img src={iconBack} className={'rightSection__back-iconRotate pointer'}/>\n                                </Grid>\n                            </Grid>\n                        </div>\n\n                        <div className={'rightSection__personalInput rightSection__content-alignRight'}>\n\n                            <button\n                                className={`rightSection__personalButton rightSection__personalButton-withoutBorder pointer`}>\n                                ENVIAR COTIZACIÓN POR CORREO\n                            </button>\n\n                            <button className={`rightSection__personalButton rightSection__personalButton-buy pointer`}\n                                    onClick={validateData}>\n                                COMPRAR PLAN\n                            </button>\n                        </div>\n\n                    </div>\n\n                </Grid>\n            </Grid>\n\n        </Fragment>\n    );\n}\n\nexport default StepTwoPage;\n","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/cardPlan/CardPlan.tsx",["120","121"],"import React from 'react';\n\nimport './style.css';\n\nimport checkSelected from '../../assets/images/gl_selected.png';\nimport checkUnselected from '../../assets/images/gl_unselected.png';\n\nfunction CardPlan(props: { planId: number, name: string, cost: number, state: boolean, selectPlan: any }) {\n\n    return (\n\n        <div\n            className={`pointer non-selectable cardPlan__border cardPlan__border-${props.state ? 'selected' : 'unselected'}`}\n            onClick={() => props.selectPlan(props.planId)}>\n\n            <div className={'cardDetailPlan__iconState'}>\n                <img src={props.state ? checkSelected : checkUnselected} className={'cardPlan__icon-select'}/>\n                <div className={'cardDetailPlan__name'}>\n                    {props.name}\n                </div>\n            </div>\n\n            <div className={'cardDetailPlan__ammount'}>\n                <span className={'cardDetailPlan__ammount-simbol'}>S/.</span>{props.cost}\n            </div>\n\n            <div className={'cardDetailPlan__name'}>\n                mensual\n            </div>\n        </div>\n\n    );\n}\n\nexport default CardPlan;\n","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/cardDetailPlan/CardDetailPlan.tsx",["122"],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/components/itemBenefit/ItemBenefit.tsx",["123"],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/listBelefits.js",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/optionList.js",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/typeDocs.js",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/plans.js",[],"/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/pages/EndPage.tsx",["124","125"],"import React, {Fragment, useEffect} from 'react';\nimport {Grid} from '@material-ui/core';\n\nimport imgCenter from '../assets/images/Illustration-1.png';\n\n// @ts-ignore\nimport {useHistory} from \"react-router-dom\";\n\nimport {shallowEqual, useSelector} from \"react-redux\";\n\nimport './style.css';\n\nfunction StepTwoPage() {\n\n    const history = useHistory();\n\n    // @ts-ignore\n    const {person} = useSelector(store => store, shallowEqual)\n\n    const validateData = () => {\n        history.push(\"/start\")\n        window.scrollTo(0, 0);\n        window.location.reload();\n    }\n\n    useEffect(() => {\n\n        // eslint-disable-next-line\n        !person.document ? history.push(\"/start\") : '';\n        window.scrollTo(0, 0);\n\n    }, [person])\n\n    return (\n        <Fragment>\n\n            <img src={imgCenter} className={'steep__image-center'}/>\n            <Grid container>\n                <Grid item sm={4}>\n\n                    <div className={'stepLeftSection'}>\n                    </div>\n                </Grid>\n\n                <Grid item sm={7}>\n\n                    <div className={'stepRightSection__end'}>\n\n                        <div className={'rightSection__textService-menu rightSection__topBorder-end'}/>\n\n                        <div className={'rightSection__text-end'}>\n                            ¡Gracias por <span className={'rightSection__text-bold'}>confiar en nosotros!</span>\n                        </div>\n                        <div className={'rightSection__text-subEnd'}>\n                            Queremos conocer mejor la salud de los asegurados. Un asesor <span\n                            className={'rightSection__text-subEnfasis'}>\n                            se pondrá en contacto </span>\n                            contigo en las siguientes <span className={'rightSection__text-subEnfasis'}>48 horas.</span>\n                        </div>\n\n                        <div className={'rightSection__personalInput rightSection__content-alignRight'}>\n                            <button\n                                className={`rightSection__personalButton rightSection__personalButton-health pointer`}\n                                onClick={validateData}>\n                                IR A SALUD\n                            </button>\n                        </div>\n\n                    </div>\n\n                </Grid>\n            </Grid>\n\n        </Fragment>\n    );\n}\n\nexport default StepTwoPage;\n","/Users/Daniel/Documents/TCS/frontend-technical-challenge/src/assets/data/detailPlans.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":11,"column":17,"nodeType":"132","endLine":11,"endColumn":74},{"ruleId":"130","severity":1,"message":"131","line":15,"column":25,"nodeType":"132","endLine":15,"endColumn":84},{"ruleId":"133","severity":1,"message":"134","line":128,"column":8,"nodeType":"135","endLine":128,"endColumn":29,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":155,"column":8,"nodeType":"135","endLine":155,"endColumn":16,"suggestions":"138"},{"ruleId":"130","severity":1,"message":"131","line":160,"column":13,"nodeType":"132","endLine":160,"endColumn":69},{"ruleId":"139","severity":1,"message":"140","line":40,"column":61,"nodeType":"141","messageId":"142","endLine":40,"endColumn":67},{"ruleId":"139","severity":1,"message":"143","line":40,"column":69,"nodeType":"141","messageId":"142","endLine":40,"endColumn":76},{"ruleId":"133","severity":1,"message":"144","line":160,"column":8,"nodeType":"135","endLine":160,"endColumn":16,"suggestions":"145"},{"ruleId":"130","severity":1,"message":"131","line":169,"column":13,"nodeType":"132","endLine":169,"endColumn":69},{"ruleId":"146","severity":1,"message":"147","line":37,"column":33,"nodeType":"148","messageId":"149","endLine":37,"endColumn":35},{"ruleId":"133","severity":1,"message":"150","line":56,"column":8,"nodeType":"135","endLine":56,"endColumn":16,"suggestions":"151"},{"ruleId":"130","severity":1,"message":"131","line":61,"column":13,"nodeType":"132","endLine":61,"endColumn":69},{"ruleId":"130","severity":1,"message":"131","line":111,"column":37,"nodeType":"132","endLine":111,"endColumn":110},{"ruleId":"130","severity":1,"message":"131","line":122,"column":37,"nodeType":"132","endLine":122,"endColumn":110},{"ruleId":"139","severity":1,"message":"152","line":2,"column":9,"nodeType":"141","messageId":"142","endLine":2,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":17,"column":17,"nodeType":"132","endLine":17,"endColumn":112},{"ruleId":"130","severity":1,"message":"131","line":45,"column":33,"nodeType":"132","endLine":45,"endColumn":101},{"ruleId":"130","severity":1,"message":"131","line":16,"column":25,"nodeType":"132","endLine":16,"endColumn":111},{"ruleId":"133","severity":1,"message":"150","line":30,"column":8,"nodeType":"135","endLine":30,"endColumn":16,"suggestions":"153"},{"ruleId":"130","severity":1,"message":"131","line":35,"column":13,"nodeType":"132","endLine":35,"endColumn":69},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'typeDocSize'. Either include them or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has a missing dependency: 'fromValues'. Either include it or remove the dependency array. You can also do a functional update 'setFromValues(f => ...)' if you only need 'fromValues' in the 'setFromValues' call.",["157"],"@typescript-eslint/no-unused-vars","'gender' is assigned a value but never used.","Identifier","unusedVar","'insured' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fromValues', 'history', 'valueGender', and 'valueInsured'. Either include them or remove the dependency array. You can also do a functional update 'setFromValues(f => ...)' if you only need 'fromValues' in the 'setFromValues' call.",["158"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["159"],"'Grid' is defined but never used.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},"Update the dependencies array to be: [dispatch, fromValues.document, typeDocSize]",{"range":"170","text":"171"},"Update the dependencies array to be: [fromValues, person]",{"range":"172","text":"173"},"Update the dependencies array to be: [fromValues, history, person, valueGender, valueInsured]",{"range":"174","text":"175"},"Update the dependencies array to be: [history, person]",{"range":"176","text":"177"},{"range":"178","text":"177"},[4460,4481],"[dispatch, fromValues.document, typeDocSize]",[5258,5266],"[fromValues, person]",[5191,5199],"[fromValues, history, person, valueGender, valueInsured]",[1373,1381],"[history, person]",[702,710]]